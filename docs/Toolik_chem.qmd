---
title: "Task 2"
author: "Heather"
format: html
editor: visual
execute: 
  warning: false
---

# Task 2

Explore this [**data package**](https://portal.edirepository.org/nis/mapbrowse?packageid=knb-lter-arc.10341.5) from EDI, which contains a \"Data file describing the biogeochemistry of samples collected at various sites near Toolik Lake, North Slope of Alaska\". Familiarize yourself with the metadata (particularly, View full metadata \> expand \'Data entities\' to learn more about the variables in the dataset).

**Citation:** Kling, G. 2016. Biogeochemistry data set for soil waters, streams, and lakes near Toolik on the North Slope of Alaska, 2011. ver 5. Environmental Data Initiative. [**https://doi.org/10.6073/pasta/362c8eeac5cad9a45288cf1b0d617ba7**](https://doi.org/10.6073/pasta/362c8eeac5cad9a45288cf1b0d617ba7)

1.  Download the CSV containing the Toolik biogeochemistry data

2.  Take a look at it - how are missing values stored? Keep that in mind.

3.  Drop the CSV into your data folder of your project

4.  Create a new Quarto document, save in docs as `toolik_chem.qmd`

5.  Attach the `tidyverse`, `here`, and `janitor` packages in your setup code chunk

```{r}
library(tidyverse)
library(here)
library(janitor)
```

1.  Read in the data as `toolik_biochem`. Remember, you\'ll want to specify here how `NA` values are stored. Pipe directly into `janitor::clean_names()` following your import code to get all column names into lower snake case.

2.  

```{r}
toolik_biochem <- read_csv(here("data", "2011_Kling_Akchem.csv"), na = ".") %>% 
  janitor::clean_names()
# view(toolik_biochem)

```

1.  Create a subset of the data that contains only observations from the \"Toolik Inlet\" site, and that only contains the variables (columns) for pH, dissolved organic carbon (DOC), and total dissolved nitrogen (TDN) (**hint:** see `dplyr::select()`). Store this subset as `inlet_biochem`. Make sure to look at the subset you\'ve created.

2.  

```{r}
inlet<- toolik_biochem %>% 
  filter(site == "Toolik Inlet" | site == "Toolik inlet")
inlet_biochem <- select(inlet, c("p_h", "doc_u_m", "tdn_u_m"))
  
view(inlet_biochem)
  
```

1.  Find the mean value of each column in `inlet_biochem` 3 different ways:

```{=html}
<!-- -->
```
1.  Write a for loop from scratch to calculate the mean for each

2.  Use *one other method* (e.g.Â `apply`, `across`, or `purrr::map_df`) to find the mean for each column.

```{r}
for (i in seq_along(inlet_biochem)) {
  mean_inlet <- mean(inlet_biochem[[i]], na.rm = TRUE)
  print(mean_inlet)
}
```

```{r}
apply(X = inlet_biochem, MARGIN = 2, FUN = mean, )
```

```{r}
inlet_biochem %>% 
  summarize(across(everything(), ~mean(.x, na.rm = TRUE)))
```
